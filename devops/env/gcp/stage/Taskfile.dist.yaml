version: '3'
env:
  PROJECT_ID: "ecosystem-connectors-data"
  REGION: "me-west1"
  ZONE: "me-west1-a"
  BUCKET_NAME: "ecosys-workspace-vars"
  COMMON_VARS: "{{ .TASKFILE_DIR }}/common_vars.yaml"
tasks:

  plan:
    cmds:
      - task common-vars:download -- {{ .CLI_ARGS }}
      - terragrunt run-all plan
  apply:
    cmds:
      - terragrunt run-all apply --terragrunt-non-interactive
      - task common-vars:upload
  destroy:
    cmds:
      - task plan -- {{ .CLI_ARGS }}
      - terragrunt run-all destroy --terragrunt-non-interactive
  clean:
    cmds:
      - find . \( -type d -name ".terragrunt-cache" -o -name ".terraform" \) -prune -exec rm -rf {} +
      - find . -type f -name ".terraform.lock.hcl" -exec rm -f {} +
      - find . -maxdepth 1 -type f \( -name "*.pem" -o -name "*.jks" \) -exec rm -f {} +
      - find . -type f -exec sh -c 'head -n 1 "{}" | grep -q "^# Generated by Terragrunt" && rm -f "{}"' \;
  connect:gke:
    cmds:
      - gcloud container clusters get-credentials ws-1-gke --zone $ZONE --project $PROJECT_ID
  output:metadata:set-env:
    cmds:
      - "{{.ROOT_DIR}}/scripts/metadata.py --set-env {{ .CLI_ARGS }}"
  output:ca_aerospike_com_pem:
    cmds:
      - ./scripts/get-cert-file.sh
  output:ca_aerospike_com_pem:jks:
    cmds:
      - find . -maxdepth 1 -type f -name "ca.aerospike.com.pem.jks" -exec rm -f {} +
      - keytool -importcert -trustcacerts -noprompt -storetype jks -keystore ca.aerospike.com.pem.jks -file ca.aerospike.com.pem -storepass "password"
  common-vars:upload:
    cmds:
      - "{{.ROOT_DIR}}/scripts/metadata.py --upload"
  common-vars:download:
    cmds:
      - "{{.ROOT_DIR}}/scripts/metadata.py --download {{ .CLI_ARGS }}"
  generate-aerospike-conf:
    cmds:
      - ansible-playbook {{.ROOT_DIR}}/modules/asdb/ansible/generate-asdb-conf.yaml --extra-vars="cluster_ip_addresses=127.0.0.1"

# Aerospike database configuration file.

# This stanza must come first.
service {
    cluster-name source.server
	user root
	group root
#	pidfile /var/run/aerospike/asd.pid

	proto-fd-max 15000
	feature-key-file /etc/aerospike/trial-features.conf
	microsecond-histograms true
}

security {
}

logging {
	# Log file must be an absolute path.
#	file /var/log/aerospike/aerospike.log {
#		context any info
#	}

	# Send log messages to stdout
	console {
		context any info
	}
}

network {
    tls <cluster-name> {
        # The ca file of the source cluster should be the xdr proxy's ca file (destination).
        ca-file /opt/aerospike/etc/xdrproxy/certs/xdr.proxy.ca.crt
        cert-file /opt/aerospike/etc/certs/source.server.crt
        key-file /opt/aerospike/etc/private/source.server.key

        # Support ECDSA or RSA certs but only AES128/256 SHA256/384 with GCM
        cipher-suite ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-GCM-SHA256
    }

    # TLS XDR Proxy dest
    tls xdr.proxy.client {
        ca-file /opt/aerospike/etc/xdrproxy/certs/xdr.proxy.ca.crt
        cert-file /opt/aerospike/etc/xdrproxy/certs/xdr.proxy.server.crt
        key-file /opt/aerospike/etc/xdrproxy/private/xdr.proxy.server.key

        # Support ECDSA or RSA certs but only AES128/256 SHA256/384 with GCM
        cipher-suite ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-GCM-SHA256
    }

	service {
		tls-address any
		tls-port 3000
		tls-name <cluster-name>

		tls-authenticate-client false

		# Uncomment the following to set the `access-address` parameter to the
		# IP address of the Docker host. This will the allow the server to correctly
		# publish the address which applications and other nodes in the cluster to
		# use when addressing this node.
		# access-address <IPADDR>
	}

	heartbeat {
        tls-address any
		# mesh is used for environments that do not support multicast
		mode mesh
		tls-port 3002
		tls-name <cluster-name>

		# use asinfo -v 'tip:host=<ADDR>;port=3002' to inform cluster of
		# other mesh nodes

		interval 150
		timeout 10
	}

	fabric {
	    tls-address any
		tls-port 3001
		tls-name <cluster-name>
	}

	info {
	    address any
		port 3003
	}
}

xdr {
    dc AdrDC {
        node-address-port host.docker.internal 8082 xdr.proxy.client
        tls-name <cluster-name>
        connector true
        namespace source-ns1 {
            remote-namespace adr-ns1
            max-throughput 0
            ship-only-specified-sets false
            ship-nsup-deletes true
        }
        namespace source-ns2 {
            remote-namespace adr-ns2
            max-throughput 0
            ship-only-specified-sets false
            ship-nsup-deletes true
        }
        namespace source-ns3 {
            remote-namespace adr-ns3
            max-throughput 0
            ship-only-specified-sets true
            ship-set set1
            ship-set set2
            ship-set set3
            ship-set setStressBackup3Test
            ship-nsup-deletes true
        }
        namespace source-ns4 {
            remote-namespace adr-ns4
            max-throughput 0
            ship-only-specified-sets false
            ship-nsup-deletes true
        }
        namespace source-ns5 {
            remote-namespace adr-ns5
            max-throughput 0
            ship-only-specified-sets false
            ship-nsup-deletes true
        }
        namespace source-ns6 {
            remote-namespace adr-ns6
            max-throughput 0
            ship-only-specified-sets false
            ship-nsup-deletes true
        }
        namespace source-ns7 {
            remote-namespace adr-ns7
            max-throughput 0
            ship-only-specified-sets false
            ship-nsup-deletes true
        }
        namespace source-ns8 {
            remote-namespace adr-ns8
            max-throughput 0
            ship-only-specified-sets false
            ship-nsup-deletes true
        }
        namespace source-ns9 {
            remote-namespace adr-ns9
            max-throughput 0
            ship-only-specified-sets false
            ship-nsup-deletes true
        }
        namespace source-ns10 {
            remote-namespace adr-ns10
            max-throughput 0
            ship-only-specified-sets false
            ship-nsup-deletes true
        }
        namespace source-ns11 {
            remote-namespace adr-ns11
            max-throughput 0
            ship-only-specified-sets false
            ship-nsup-deletes true
        }
        namespace source-ns12 {
            remote-namespace adr-ns12
            max-throughput 0
            ship-only-specified-sets false
            ship-nsup-deletes true
        }
        namespace source-ns13 {
            remote-namespace adr-ns13
            max-throughput 0
            ship-only-specified-sets false
            ship-nsup-deletes true
        }
        namespace source-ns14 {
            remote-namespace adr-ns14
            max-throughput 0
            ship-only-specified-sets false
            ship-nsup-deletes true
        }
        namespace source-ns15 {
            remote-namespace adr-ns15
            max-throughput 0
            ship-only-specified-sets false
            ship-nsup-deletes true
        }
        namespace source-ns16 {
                    remote-namespace adr-ns16
                    max-throughput 0
                    ship-only-specified-sets false
                    ship-nsup-deletes true
                }
        namespace source-ns17 {
                    remote-namespace adr-ns17
                    max-throughput 0
                    ship-only-specified-sets false
                    ship-nsup-deletes true
                }
        namespace source-ns18 {
                    remote-namespace adr-ns18
                    max-throughput 0
                    ship-only-specified-sets false
                    ship-nsup-deletes true
                }
        namespace source-ns19 {
                    remote-namespace adr-ns19
                    max-throughput 0
                    ship-only-specified-sets false
                    ship-nsup-deletes true
                }
        namespace source-ns20 {
                    remote-namespace adr-ns20
                    max-throughput 0
                    ship-only-specified-sets false
                    ship-nsup-deletes true
                }
    }
}

namespace source-ns1 {
	replication-factor 2
	memory-size 1G
	default-ttl 30d # 5 days, use 0 to never expire/evict.
	nsup-period 120
    storage-engine memory
}

namespace source-ns2 {
	replication-factor 2
	memory-size 1G
	default-ttl 30d # 5 days, use 0 to never expire/evict.
	nsup-period 120
    storage-engine memory
}

namespace source-ns3 {
	replication-factor 2
	memory-size 1G
	default-ttl 30d # 5 days, use 0 to never expire/evict.
	nsup-period 120
    storage-engine memory
}

namespace source-ns4 {
	replication-factor 2
	memory-size 1G
	default-ttl 30d # 5 days, use 0 to never expire/evict.
	nsup-period 120
    storage-engine memory
}

namespace source-ns5 {
	replication-factor 2
	memory-size 1G
	default-ttl 30d # 5 days, use 0 to never expire/evict.
	nsup-period 120
    storage-engine memory
}

namespace source-ns6 {
	replication-factor 2
	memory-size 1G
	default-ttl 30d # 5 days, use 0 to never expire/evict.
	nsup-period 120
    storage-engine memory
}

namespace source-ns7 {
	replication-factor 2
	memory-size 1G
	default-ttl 30d # 5 days, use 0 to never expire/evict.
	nsup-period 120
    storage-engine memory
}

namespace source-ns8 {
	replication-factor 2
	memory-size 1G
	default-ttl 30d # 5 days, use 0 to never expire/evict.
	nsup-period 120
    storage-engine memory
}

namespace source-ns9 {
	replication-factor 2
	memory-size 1G
	default-ttl 30d # 5 days, use 0 to never expire/evict.
	nsup-period 120
    storage-engine memory
}

namespace source-ns10 {
	replication-factor 2
	memory-size 1G
	default-ttl 30d # 5 days, use 0 to never expire/evict.
	nsup-period 120
    storage-engine memory
}

namespace source-ns11 {
	replication-factor 2
	memory-size 1G
	default-ttl 30d # 5 days, use 0 to never expire/evict.
	nsup-period 120
    storage-engine memory
}

namespace source-ns12 {
	replication-factor 2
	memory-size 1G
	default-ttl 30d # 5 days, use 0 to never expire/evict.
	nsup-period 120
    storage-engine memory
}

namespace source-ns13 {
	replication-factor 2
	memory-size 1G
	default-ttl 30d # 5 days, use 0 to never expire/evict.
	nsup-period 120
    storage-engine memory
}

namespace source-ns14 {
	replication-factor 2
	memory-size 1G
	default-ttl 30d # 5 days, use 0 to never expire/evict.
	nsup-period 120
    storage-engine memory
}

namespace source-ns15 {
	replication-factor 2
	memory-size 1G
	default-ttl 30d # 5 days, use 0 to never expire/evict.
	nsup-period 120
    storage-engine memory
}

namespace source-ns16 {
	replication-factor 2
	memory-size 1G
	default-ttl 30d # 5 days, use 0 to never expire/evict.
	nsup-period 120
    storage-engine memory
}

namespace source-ns17 {
	replication-factor 2
	memory-size 1G
	default-ttl 30d # 5 days, use 0 to never expire/evict.
	nsup-period 120
    storage-engine memory
}

namespace source-ns18 {
	replication-factor 2
	memory-size 1G
	default-ttl 30d # 5 days, use 0 to never expire/evict.
	nsup-period 120
    storage-engine memory
}

namespace source-ns19 {
	replication-factor 2
	memory-size 1G
	default-ttl 30d # 5 days, use 0 to never expire/evict.
	nsup-period 120
    storage-engine memory
}

namespace source-ns20 {
	replication-factor 2
	memory-size 1G
	default-ttl 30d # 5 days, use 0 to never expire/evict.
	nsup-period 120
    storage-engine memory
}